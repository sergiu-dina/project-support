@model Chat

@using Microsoft.AspNetCore.Identity
@using ProjectSupport.Areas.Identity.Data

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@{
    ViewBag.Title = "Project Chat";
}

<div class="container child2">
    <div class="content-container">
        <div class="container-fluid">

            <div class="card">
                <div class="card-header text-center" style="background-color: #3F0E40">
                    <h1 class="text-white">@Model.Name Chat</h1>
                </div>
                <div class="card-body" style="background-color: floralwhite">
                    <div class="chat-body" style="height: 500px">
                        <div>
                            @if (Model.Messages.Count > 0)
                            {
                                <div class="text-center">
                                    <img class="text-center" src="~/img/noMessages.svg" style="height: 450px">
                                </div>
                                @foreach (var message in Model.Messages)
                                {
                                    <div class="message">
                                        <header>@message.Name:</header>
                                        <p>@message.Text</p>
                                        <footer>@message.Timestamp</footer>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-center">
                                    <h5 class="text-danger text-center">There are no messages in this chat.</h5>
                                    <img class="text-center" src="~/img/noMessages.svg" style="height: 450px">
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <form class="chat-input" onsubmit="sendMessage(event)" asp-controller="Chat" asp-action="CreateMessage">
                    <input type="hidden" name="chatId" value="@Model.Id">
                    <input type="hidden" name="roomName" value="@Model.Name">
                    <input type="hidden" name="userId" value="@UserManager.GetUserId(User)">
                    <input type="text" name="mess" id="message-input">
                    <button type="submit" class="btn btn-light">
                        Send
                        <i class="fa fa-paper-plane fa-fw"></i>
                    </button>
                    <a class="btn btn-light"
                       asp-action="Index" asp-controller="Gantt" asp-route-id="@UserManager.GetUserId(User)">
                        Back
                    </a>
                </form>

            </div>

        </div>
    </div>
</div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/messageBuilder.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

        connection.on("RecieveMessage", function (data) {
            console.log(data);
            var date = new Date(data.timestamp).toLocaleString() 
            var message = messageBuilder()
                .createMessage()
                .withHeader(data.name)
                .withParagraph(data.text)
                .withFooter(date)
                .build();
            document.querySelector('.chat-body').prepend(message);
        })

        connection.start()
            .then(function () {
                connection.invoke('joinRoom', '@Model.Name')
                })
            .catch(function (err) {
                console.log(err)
            })

        var sendMessage = function (event) {
            event.preventDefault();
            var data = new FormData(event.target);
            document.getElementById('message-input').value = '';
            axios.post('/Chat/SendMessage', data)
                .then(res => {
                    console.log("Message Sent!")
                })
                .catch(err => {
                    console.log("Failed to send message!")
                })
        }

    </script>
    
